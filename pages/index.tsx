import { useEffect, useState } from "react";
import ReactDOMServer from "react-dom/server";

import Head from "next/head";
import { GetServerSidePropsContext } from "next";

import FormField from "../components/FormField";
import SubmitEmail from "../components/SubmitEmail";
import { form1 } from "../fixtures/formJsons/form1";

import { FormType } from "../types/form";

type Props = {
  formJson: FormType;
};

export default function Home({ formJson }: Props) {
  // State that congregates the form fields value and valid properties
  const [formStatus, setFormStatus] = useState<{
    [key in keyof typeof formJson.fields]: { valid: boolean; value: string };
  }>({});
  const [isFormValid, setIsFormValid] = useState(false);
  const { title, subtitle, fields } = formJson;

  // Console logs the email html
  const submitForm = () => {
    if (isFormValid) {
      const sortedEmailData = Object.keys(formJson.fields).map((key) => ({
        label: formJson.fields[key].label,
        value: formStatus[key].value,
      }));
      console.log(
        ReactDOMServer.renderToString(
          <SubmitEmail sortedEmailData={sortedEmailData} />
        )
      );
    }
  };

  // Validates isFormValid for fields valid property is true
  useEffect(() => {
    setIsFormValid(
      Object.values(formStatus).every(({ valid }) => valid === true)
    );
  }, [formStatus]);

  return (
    <div className="bg-slate-200 min-h-screen flex flex-col items-center justify-center p-7">
      <Head>
        <title>Form Builder</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="max-w-3xl w-full bg-white shadow-2xl p-10 rounded-2xl">
        {formJson ? (
          <div className="space-y-3">
            <h1 className="text-2xl font-bold">{title}</h1>
            <h4 className="italic text-gray-500">{subtitle}</h4>
            {fields && (
              <div className="space-y-4">
                {Object.keys(fields).map((key) => {
                  const field = fields[key];
                  return (
                    <FormField
                      key={key}
                      id={key}
                      field={field}
                      setFormStatus={setFormStatus}
                    />
                  );
                })}
              </div>
            )}
            <button
              onClick={() => submitForm()}
              className={
                `bg-blue-900 p-2 text-white rounded-md px-5 ` +
                `${
                  !isFormValid ? "opacity-50" : "opacity:100 hover:bg-blue-600"
                }`
              }
            >
              Submit
            </button>
          </div>
        ) : (
          <p>Nothing was found</p>
        )}
      </div>
    </div>
  );
}

export async function getServerSideProps(context: GetServerSidePropsContext) {
  return {
    props: { formJson: form1 },
  };
}
